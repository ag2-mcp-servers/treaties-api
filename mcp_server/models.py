# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T08:18:04+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import AnyUrl, BaseModel, ConfigDict


class Department(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[int] = None
    name: Optional[str] = None


class GovernmentOrganisation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[int] = None
    name: Optional[str] = None


class House(Enum):
    Commons = 'Commons'
    Lords = 'Lords'


class Link(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    href: Optional[str] = None
    method: Optional[str] = None
    rel: Optional[str] = None


class ParliamentaryConclusion(Enum):
    NotConcluded = 'NotConcluded'
    CanRatify = 'CanRatify'
    CantRatify = 'CantRatify'


class ParliamentaryProcess(Enum):
    NotConcluded = 'NotConcluded'
    Concluded = 'Concluded'


class SeriesMembership(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    id: Optional[int] = None


class SeriesMembershipResource(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    links: Optional[List[Link]] = None
    value: Optional[SeriesMembership] = None


class SeriesMembershipResourceCollection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[SeriesMembershipResource]] = None
    itemsPerPage: Optional[int] = None
    links: Optional[List[Link]] = None
    totalResults: Optional[int] = None


class SeriesMembershipType(Enum):
    CountrySeriesMembership = 'CountrySeriesMembership'
    EuropeanUnionSeriesMembership = 'EuropeanUnionSeriesMembership'
    MiscellaneousSeriesMembership = 'MiscellaneousSeriesMembership'


class TreatySeriesMembership(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    citation: Optional[str] = None
    seriesMembershipType: Optional[SeriesMembershipType] = None
    uri: Optional[AnyUrl] = None


class BusinessItemHouse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    house: Optional[House] = None
    name: Optional[str] = None


class GovernmentOrganisationResource(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    links: Optional[List[Link]] = None
    value: Optional[GovernmentOrganisation] = None


class GovernmentOrganisationResourceCollection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[GovernmentOrganisationResource]] = None
    itemsPerPage: Optional[int] = None
    links: Optional[List[Link]] = None
    totalResults: Optional[int] = None


class Treaty(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    commandPaperNumber: Optional[int] = None
    commandPaperPrefix: Optional[str] = None
    commonsLayingDate: Optional[datetime] = None
    countrySeriesItemCitation: Optional[str] = None
    countrySeriesMembership: Optional[AnyUrl] = None
    debateScheduled: Optional[str] = None
    europeanSeriesItemCitation: Optional[str] = None
    europeanUnionSeriesMembership: Optional[AnyUrl] = None
    id: Optional[str] = None
    layingBodyDepartment: Optional[Department] = None
    layingBodyDepartmentId: Optional[int] = None
    layingBodyName: Optional[str] = None
    leadDepartment: Optional[Department] = None
    leadGovernmentOrganisationDepartmentId: Optional[int] = None
    leadGovernmentOrganisationGroupName: Optional[str] = None
    lordsLayingDate: Optional[datetime] = None
    miscSeriesItemCitation: Optional[str] = None
    miscellaneousSeriesMembership: Optional[AnyUrl] = None
    name: Optional[str] = None
    parliamentaryConclusion: Optional[ParliamentaryConclusion] = None
    treatySeriesMembership: Optional[TreatySeriesMembership] = None
    uri: Optional[AnyUrl] = None
    webLink: Optional[AnyUrl] = None


class TreatyResource(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    links: Optional[List[Link]] = None
    value: Optional[Treaty] = None


class TreatyResourceCollection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[TreatyResource]] = None
    itemsPerPage: Optional[int] = None
    links: Optional[List[Link]] = None
    totalResults: Optional[int] = None


class BusinessItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessItemUri: Optional[AnyUrl] = None
    houseId: Optional[str] = None
    houseName: Optional[str] = None
    houseUri: Optional[AnyUrl] = None
    houses: Optional[List[BusinessItemHouse]] = None
    id: Optional[str] = None
    itemDate: Optional[datetime] = None
    link: Optional[str] = None
    procedureStepId: Optional[str] = None
    procedureStepUri: Optional[AnyUrl] = None
    sequence: Optional[int] = None
    stepName: Optional[str] = None
    treatyId: Optional[str] = None
    treatyUri: Optional[AnyUrl] = None
    workpackageProcedureUri: Optional[AnyUrl] = None


class BusinessItemResource(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    links: Optional[List[Link]] = None
    value: Optional[BusinessItem] = None


class BusinessItemResourceCollection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[BusinessItemResource]] = None
    itemsPerPage: Optional[int] = None
    links: Optional[List[Link]] = None
    totalResults: Optional[int] = None
